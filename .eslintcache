[{"/mnt/c/Users/bruno/Desktop/team-selector-frontend/team-selector/src/index.js":"1","/mnt/c/Users/bruno/Desktop/team-selector-frontend/team-selector/src/reportWebVitals.js":"2","/mnt/c/Users/bruno/Desktop/team-selector-frontend/team-selector/src/components/App/App.js":"3","/mnt/c/Users/bruno/Desktop/team-selector-frontend/team-selector/src/components/App/index.js":"4","/mnt/c/Users/bruno/Desktop/team-selector-frontend/team-selector/src/data/store.js":"5","/mnt/c/Users/bruno/Desktop/team-selector-frontend/team-selector/src/data/initial.js":"6","/mnt/c/Users/bruno/Desktop/team-selector-frontend/team-selector/src/data/reducer.js":"7","/mnt/c/Users/bruno/Desktop/team-selector-frontend/team-selector/src/data/actions/api.js":"8","/mnt/c/Users/bruno/Desktop/team-selector-frontend/team-selector/src/data/actions/state.js":"9","/mnt/c/Users/bruno/Desktop/team-selector-frontend/team-selector/src/components/StartScreen/index.js":"10","/mnt/c/Users/bruno/Desktop/team-selector-frontend/team-selector/src/components/StartScreen/StartScreen.js":"11","/mnt/c/Users/bruno/Desktop/team-selector-frontend/team-selector/src/components/TeamCreator/index.js":"12","/mnt/c/Users/bruno/Desktop/team-selector-frontend/team-selector/src/components/TeamCreator/TeamCreator.js":"13","/mnt/c/Users/bruno/Desktop/team-selector-frontend/team-selector/src/components/TeamInput.js":"14","/mnt/c/Users/bruno/Desktop/team-selector-frontend/team-selector/src/axios.js":"15","/mnt/c/Users/bruno/Desktop/team-selector-frontend/team-selector/src/components/PlayerCreator/index.js":"16","/mnt/c/Users/bruno/Desktop/team-selector-frontend/team-selector/src/components/PlayerCreator/PlayerCreator.js":"17","/mnt/c/Users/bruno/Desktop/team-selector-frontend/team-selector/src/components/PlayerInput.js":"18","/mnt/c/Users/bruno/Desktop/team-selector-frontend/team-selector/src/components/Match/index.js":"19","/mnt/c/Users/bruno/Desktop/team-selector-frontend/team-selector/src/components/Match/Match.js":"20","/mnt/c/Users/bruno/Desktop/team-selector-frontend/team-selector/src/components/Inputs.js":"21"},{"size":632,"mtime":1608591792338,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":1608589213342,"results":"24","hashOfConfig":"23"},{"size":1290,"mtime":1609453394968,"results":"25","hashOfConfig":"23"},{"size":359,"mtime":1609429612059,"results":"26","hashOfConfig":"23"},{"size":360,"mtime":1608594837582,"results":"27","hashOfConfig":"23"},{"size":139,"mtime":1609428158702,"results":"28","hashOfConfig":"23"},{"size":920,"mtime":1609428120743,"results":"29","hashOfConfig":"23"},{"size":2176,"mtime":1609427926711,"results":"30","hashOfConfig":"23"},{"size":1065,"mtime":1609427953439,"results":"31","hashOfConfig":"23"},{"size":524,"mtime":1608740710667,"results":"32","hashOfConfig":"23"},{"size":1632,"mtime":1609447256149,"results":"33","hashOfConfig":"23"},{"size":700,"mtime":1609340673202,"results":"34","hashOfConfig":"23"},{"size":3830,"mtime":1609522578508,"results":"35","hashOfConfig":"23"},{"size":3359,"mtime":1609469673239,"results":"36","hashOfConfig":"23"},{"size":185,"mtime":1608739185886,"results":"37","hashOfConfig":"23"},{"size":738,"mtime":1609521062654,"results":"38","hashOfConfig":"23"},{"size":6043,"mtime":1609523029594,"results":"39","hashOfConfig":"23"},{"size":3667,"mtime":1609519307139,"results":"40","hashOfConfig":"23"},{"size":286,"mtime":1609428293709,"results":"41","hashOfConfig":"23"},{"size":1678,"mtime":1609432773513,"results":"42","hashOfConfig":"23"},{"size":1972,"mtime":1609520533630,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"rpmbkz",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},"/mnt/c/Users/bruno/Desktop/team-selector-frontend/team-selector/src/index.js",[],["92","93"],"/mnt/c/Users/bruno/Desktop/team-selector-frontend/team-selector/src/reportWebVitals.js",[],"/mnt/c/Users/bruno/Desktop/team-selector-frontend/team-selector/src/components/App/App.js",["94"],"import { Component } from \"react\";\nimport{\n  BrowserRouter as Router,\n  Route,\n  Switch,\n} from \"react-router-dom\";\n\nimport StartScreen from \"../StartScreen\";\nimport TeamCreator from \"../TeamCreator\";\nimport PlayerCreator from \"../PlayerCreator\";\nimport Match from \"../Match\";\n\nclass App extends Component {\n\n\n  render(){\n\n    const { appIsOn, teams, players, playerAmount } = this.props;\n\n    return(\n      <Router>\n        <>\n          <Switch>\n            <Route exact path=\"/\">\n              <div className={\"container\"}>\n                  <StartScreen /> \n              </div>\n            </Route>\n            <Route exact path=\"/add-players\">\n              <div className={\"container\"}>\n              {/* PlayerCreator component requires both teams to work - only shown when this is true */}\n              {teams[1] ? <PlayerCreator /> : <p >loading...</p>}\n              </div>\n            </Route>\n            <Route exact path=\"/match\">\n            {players[playerAmount - 1] ? <Match /> : <p >loading...</p>}\n            </Route>\n            <Route exact path=\"/team-creator\">\n            <div className={\"container\"}>\n              <TeamCreator />\n            </div>\n            </Route>\n          </Switch>\n        </>\n      </Router>\n        \n\n\n    )\n  }\n}\nexport default App;\n","/mnt/c/Users/bruno/Desktop/team-selector-frontend/team-selector/src/components/App/index.js",[],"/mnt/c/Users/bruno/Desktop/team-selector-frontend/team-selector/src/data/store.js",[],"/mnt/c/Users/bruno/Desktop/team-selector-frontend/team-selector/src/data/initial.js",[],"/mnt/c/Users/bruno/Desktop/team-selector-frontend/team-selector/src/data/reducer.js",[],"/mnt/c/Users/bruno/Desktop/team-selector-frontend/team-selector/src/data/actions/api.js",[],"/mnt/c/Users/bruno/Desktop/team-selector-frontend/team-selector/src/data/actions/state.js",[],"/mnt/c/Users/bruno/Desktop/team-selector-frontend/team-selector/src/components/StartScreen/index.js",[],"/mnt/c/Users/bruno/Desktop/team-selector-frontend/team-selector/src/components/StartScreen/StartScreen.js",[],"/mnt/c/Users/bruno/Desktop/team-selector-frontend/team-selector/src/components/TeamCreator/index.js",[],"/mnt/c/Users/bruno/Desktop/team-selector-frontend/team-selector/src/components/TeamCreator/TeamCreator.js",[],"/mnt/c/Users/bruno/Desktop/team-selector-frontend/team-selector/src/components/TeamInput.js",["95"],"import { Component } from \"react\";\n\nimport { Form } from \"react-bootstrap\";\nimport { CirclePicker } from \"react-color\";\nimport { Container, Row, Col, ToggleButtonGroup, ToggleButton } from \"react-bootstrap\";\n\nimport kitStriped from \"../img/kit-striped.png\";\nimport kitClassic from \"../img/kit-classic.png\";\nimport kitCheckers from \"../img/kit-checkers.png\";\n\nclass TeamInput extends Component {\n\n  constructor(props){\n    super(props);\n\n  }\n\n\n\n\n  render(){\n    const { team, handleInput, handleColor, handleKit, teamName, teamColor} = this.props; \n\n    return(\n        <>\n          <Container className={\"text-center mt-5\"}>\n            <Form>\n              <Row>\n                <Col>\n                  \n                </Col>\n                <Col>\n                  <Form.Group controlId=\"formName\">\n                    <Form.Label>{teamName}</Form.Label>\n                      {/* sends value(e) and name of state property to change to handle method*/}\n                      {/* eg. handleInput(e, \"team1_name\") */} \n                    <Form.Control \n                    type=\"text\" \n                    placeholder={teamName} \n                    onChange={(e) => handleInput(e, `${team}_name`)}\n                    style={{width: \"100%\"}}\n                    />\n                  </Form.Group>\n              \n                  <Form.Group controlId=\"formColor\" style={{margin: \"1rem\"}}>\n                    <CirclePicker \n                    onChange={(e) => handleColor(e.hex, `${team}_color`)}\n                  /> \n                  </Form.Group>\n\n                  <ToggleButtonGroup type=\"radio\" name=\"options\" defaultValue={1}>\n                    <ToggleButton\n                      value={1}\n                      variant=\"transparent\" \n                      onClick={(e) => handleKit(\"classic\", `${team}_kit`)}\n                    >\n                        <img \n                          src={kitClassic} \n                          style={{height: \"4rem\",  borderRadius: \"1rem\"}}\n                          alt={\"Blank Jersey\"}\n                        />\n                    </ToggleButton>\n                    <ToggleButton\n                      value={2} \n                      variant=\"transparent\"\n                      onClick={(e) => handleKit(\"striped\", `${team}_kit`)}  \n                    >\n                      <img \n                        src={kitStriped} \n                        style={{height: \"4rem\",  borderRadius: \"1rem\"}}\n                        alt={\"Striped Jersey\"}\n                      />\n                    </ToggleButton>\n                    <ToggleButton\n                      value={3} \n                      variant=\"transparent\"\n                      onClick={(e) => handleKit(\"checkers\", `${team}_kit`)}  \n                    >\n                      <img \n                        src={kitCheckers} \n                        style={{height: \"4rem\",  borderRadius: \"1rem\"}}\n                        alt={\"Checkered Jersey\"}\n                      />\n                    </ToggleButton>\n                  </ToggleButtonGroup> \n                 <div style={{height: \"10px\", backgroundColor: `${teamColor}`}}></div>\n                </Col>\n\n                <Col>\n                  \n                </Col>\n              </Row>\n            </Form>\n          </Container>\n        </>\n    )\n  }\n}\nexport default TeamInput;\n","/mnt/c/Users/bruno/Desktop/team-selector-frontend/team-selector/src/axios.js",[],"/mnt/c/Users/bruno/Desktop/team-selector-frontend/team-selector/src/components/PlayerCreator/index.js",[],"/mnt/c/Users/bruno/Desktop/team-selector-frontend/team-selector/src/components/PlayerCreator/PlayerCreator.js",["96","97","98","99"],"import { Component } from \"react\";\nimport PlayerInput from \"../PlayerInput\";\nimport { Link } from \"react-router-dom\";\n\nimport user from \"../../img/user.png\"\nimport kitStriped from \"../../img/kit-striped.png\";\nimport kitClassic from \"../../img/kit-classic.png\";\nimport kitCheckers from \"../../img/kit-checkers.png\";\n\nimport { Alert, Container, Row, Col, Button, ListGroup} from \"react-bootstrap\";\n\nclass PlayerCreator extends Component {\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            player_name: \"name\",\n            player_skill: 1,\n            player_position: \"fr\",\n\n            player_amount: this.props.player_amount,\n            players: [],\n            teamOne: [],\n            teamTwo: [],\n\n            teamsRandomised: false,\n        }\n        this.handleInput = this.handleInput.bind(this);\n        this.handleAdd = this.handleAdd.bind(this);\n        this.handleRandom = this.handleRandom.bind(this);\n        this.handlePost = this.handlePost.bind(this);\n        this.handlePosition = this.handlePosition.bind(this);\n    }\n\n    //takes in name of state variable to change and its value\n    handleInput(e, name){\n        let obj = {};\n        obj[name] = e.currentTarget.value;\n        this.setState(obj)\n    }\n\n    handlePosition(position, name){\n        let obj = {};\n        obj[name] = position;\n        this.setState(obj)\n      }\n\n    //adds values in local state to players array as a player object\n    handleAdd(){\n        if(this.state.player_amount > 0){\n            let player = {\n                player_name: this.state.player_name, \n                player_skill: this.state.player_skill, \n                player_position: this.state.player_position \n            }\n            this.setState({\n                players: [...this.state.players, player],\n                player_amount: this.state.player_amount - 1,\n            })\n        }\n    }\n\n    //randomises teams and calls api post methods\n    handleRandom(){\n        const { players } = this.state;\n        //randomly sorts players in players array\n        this.setState({players: players.sort(() => Math.random() - 0.5 )})\n        //after players are randomised - adds first half of array to team 1 and second half to team 2\n        this.setState({\n            teamOne: [...players.slice(0, (players.length/2))],\n            teamTwo: [...players.slice((players.length/2), players.length)],\n            teamsRandomised: true,\n        })\n\n    }\n\n    handlePost(){\n\n        const {addPlayer, teamOneId, teamTwoId} = this.props;\n\n        const {teamOne, teamTwo} = this.state;\n        //runs the add player api method for every player in the team - passing through its team aswell\n        teamOne.forEach(function(player) {\n            addPlayer({\n                player_name: player.player_name,\n                player_skill: player.player_skill,\n                player_position: player.player_position,\n                teamId: teamOneId,\n                teamNum: 0,\n            })\n        })\n        teamTwo.forEach(function(player) {\n            addPlayer({\n                player_name: player.player_name,\n                player_skill: player.player_skill,\n                player_position: player.player_position,\n                teamId: teamTwoId,\n                teamNum: 1,\n            })\n        })\n    }\n\n  render(){\n\n    let team1Skill = 0;\n    let team2Skill = 0;\n    this.state.teamOne.map(player => {\n        team1Skill = +team1Skill + +player.player_skill;\n    })\n    this.state.teamTwo.map(player => {\n        team2Skill = +team2Skill + +player.player_skill;\n    })\n\n    return( \n      <>\n\n        {/* Player input component is disabled after enough players have been added*/}\n        <Container>\n            <Row>\n                <Col>\n                    <PlayerInput\n                        handleInput={this.handleInput}\n                        handleAdd={this.handleAdd}\n                        handlePosition={this.handlePosition}\n                    />\n                    {!this.state.player_amount > 0 ? \n                        <Button className={\"button m-3\"} onClick={this.handleRandom}>Randomise the teams!</Button> : null\n                    }\n                    {this.state.teamsRandomised ? \n                        <Button className={\"button\"}onClick={this.handlePost}><Link to=\"/match\">See the teams!</Link></Button> : null\n                    }\n                </Col>\n\n                <Col className={\"mt-5\"}>\n                    <Alert variant={\"info\"} style={{fontSize:\"1.5rem\"}}>Players Left: {this.state.player_amount}</Alert>\n                    <ListGroup className={\"d-flex flex-row flex-wrap\"}>\n                    {this.state.players.map(player => (\n                        <ListGroup.Item variant={\"info\"} style={{width: \"30%\"}}>\n                            \n                            <h5><img src={user}style={{height: \"2rem\"}}/>{`${player.player_name}`}</h5>\n                        </ListGroup.Item>\n                    ))}\n                    </ListGroup>\n                </Col>\n            </Row>\n            <Row>\n                {this.props.teams.map(team => (\n                    \n                    <Col className={\"text-center\"}>\n                        <h2>{team.team_name}</h2>\n                        <img \n                            className={\"m-3\"}\n                            style={{height: \"4rem\"}} \n                            src={team.team_kit === \"classic\" ? kitClassic : team.team_kit === \"striped\" ? kitStriped : kitCheckers}\n                        />\n                            <div style={{margin:\"auto\",width:\"60%\",height: \"20px\", backgroundColor: `${team.team_color}`}}></div>\n                            <p>Skill Level: </p>\n                            <p>{team.id === this.props.teamOneId ? team1Skill : team2Skill}</p>\n                    </Col>\n                    ))}\n                <Col>\n                </Col>\n                <Col>\n                </Col>\n            </Row>\n        </Container>\n      </>\n    )\n  }\n}\nexport default PlayerCreator;\n","/mnt/c/Users/bruno/Desktop/team-selector-frontend/team-selector/src/components/PlayerInput.js",[],"/mnt/c/Users/bruno/Desktop/team-selector-frontend/team-selector/src/components/Match/index.js",[],"/mnt/c/Users/bruno/Desktop/team-selector-frontend/team-selector/src/components/Match/Match.js",["100","101","102","103","104","105","106","107","108"],"import { Component } from \"react\";\n\nclass Match extends Component{\n\n    constructor(props){\n        super(props);\n    }\n\n    render(){\n\n        const teamOne = this.props.players.filter((player) => {\n            return player.teamNum === 0;\n        })\n        const teamOneGk = teamOne.filter((player) => { return player.player_position === \"gk\";})\n        const teamOneDef = teamOne.filter((player) => { return player.player_position === \"def\";})\n        const teamOneMid = teamOne.filter((player) => { return player.player_position === \"mid\";})\n        const teamOneAtt = teamOne.filter((player) => { return player.player_position === \"att\";})\n\n        const teamTwo = this.props.players.filter((player) => {\n            return player.teamNum === 1;\n        })\n        const teamTwoGk = teamTwo.filter((player) => { return player.player_position === \"gk\";})\n        const teamTwoDef = teamTwo.filter((player) => { return player.player_position === \"def\";})\n        const teamTwoMid = teamTwo.filter((player) => { return player.player_position === \"mid\";})\n        const teamTwoAtt = teamTwo.filter((player) => { return player.player_position === \"att\";})\n\n        return(\n            <>\n                <h2>Team One</h2>\n                {teamOne.map(player => (\n                    <p>name: {player.player_name}, skill: {player.player_skill}, position: {player.player_position}</p>\n                ))}\n\n                <h2>Team Two</h2>\n                {teamTwo.map(player => (\n                    <p>name: {player.player_name}, skill: {player.player_skill}, position: {player.player_position}</p>\n                ))}\n\n            </>\n        )\n    }\n}\n\nexport default Match;\n","/mnt/c/Users/bruno/Desktop/team-selector-frontend/team-selector/src/components/Inputs.js",["109","110","111","112","113","114"],"import { Component } from \"react\";\nimport {Form, ToggleButtonGroup, ToggleButton, Button, OverlayTrigger, Tooltip} from \"react-bootstrap\";\n\nclass Inputs extends Component{\n\n\n    render(){\n\n        const renderTooltip = (props) => (\n            <Tooltip id=\"button-tooltip\" {...props}>\n              Allows teams to be sorted by skill\n            </Tooltip>\n          )\n      \n\n        const { type, placeholder, handleInput, title, stateName, value, img, alt, handlePosition} = this.props\n\n        return(\n            <>\n                {type === \"text\" ? \n                    <Form.Group controlId=\"formName\">\n                        <Form.Label>{title}</Form.Label>\n                        <Form.Control \n                            type=\"text\"\n                            placeholder={placeholder}\n                            onChange={(e) => handleInput(e, `${stateName}`)}\n                        />\n                    </Form.Group>\n                    :\n\n                type === \"select\" ? \n                    <Form.Group>\n                        <Form.Label>{title}</Form.Label>                    \n                        <OverlayTrigger\n                            placement=\"right\"\n                            delay={{show: 250, hide: 400}}\n                            overlay={renderTooltip}\n                        >\n                        <Button variant=\"info\" className={\"mb-2\"} >?</Button>\n                        </OverlayTrigger>\n                        <Form.Control\n                            as=\"select\"\n                            onChange={(e) => handleInput(e, `${stateName}`)}\n                        >\n                            <option>1</option>\n                            <option>2</option> \n                            <option>3</option>  \n                        </Form.Control>\n                    </Form.Group>\n                    :\n\n                    null\n            }\n            </>\n        )\n    }\n\n}\n\nexport default Inputs;\n",{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":18,"column":13,"nodeType":"121","messageId":"122","endLine":18,"endColumn":20},{"ruleId":"123","severity":1,"message":"124","line":13,"column":3,"nodeType":"125","messageId":"126","endLine":16,"endColumn":4},{"ruleId":"127","severity":1,"message":"128","line":108,"column":35,"nodeType":"129","messageId":"130","endLine":108,"endColumn":37},{"ruleId":"127","severity":1,"message":"128","line":111,"column":35,"nodeType":"129","messageId":"130","endLine":111,"endColumn":37},{"ruleId":"131","severity":1,"message":"132","line":141,"column":33,"nodeType":"133","endLine":141,"endColumn":74},{"ruleId":"131","severity":1,"message":"132","line":152,"column":25,"nodeType":"133","endLine":156,"endColumn":27},{"ruleId":"123","severity":1,"message":"124","line":5,"column":5,"nodeType":"125","messageId":"126","endLine":7,"endColumn":6},{"ruleId":"119","severity":1,"message":"134","line":14,"column":15,"nodeType":"121","messageId":"122","endLine":14,"endColumn":24},{"ruleId":"119","severity":1,"message":"135","line":15,"column":15,"nodeType":"121","messageId":"122","endLine":15,"endColumn":25},{"ruleId":"119","severity":1,"message":"136","line":16,"column":15,"nodeType":"121","messageId":"122","endLine":16,"endColumn":25},{"ruleId":"119","severity":1,"message":"137","line":17,"column":15,"nodeType":"121","messageId":"122","endLine":17,"endColumn":25},{"ruleId":"119","severity":1,"message":"138","line":22,"column":15,"nodeType":"121","messageId":"122","endLine":22,"endColumn":24},{"ruleId":"119","severity":1,"message":"139","line":23,"column":15,"nodeType":"121","messageId":"122","endLine":23,"endColumn":25},{"ruleId":"119","severity":1,"message":"140","line":24,"column":15,"nodeType":"121","messageId":"122","endLine":24,"endColumn":25},{"ruleId":"119","severity":1,"message":"141","line":25,"column":15,"nodeType":"121","messageId":"122","endLine":25,"endColumn":25},{"ruleId":"119","severity":1,"message":"142","line":2,"column":15,"nodeType":"121","messageId":"122","endLine":2,"endColumn":32},{"ruleId":"119","severity":1,"message":"143","line":2,"column":34,"nodeType":"121","messageId":"122","endLine":2,"endColumn":46},{"ruleId":"119","severity":1,"message":"144","line":16,"column":67,"nodeType":"121","messageId":"122","endLine":16,"endColumn":72},{"ruleId":"119","severity":1,"message":"145","line":16,"column":74,"nodeType":"121","messageId":"122","endLine":16,"endColumn":77},{"ruleId":"119","severity":1,"message":"146","line":16,"column":79,"nodeType":"121","messageId":"122","endLine":16,"endColumn":82},{"ruleId":"119","severity":1,"message":"147","line":16,"column":84,"nodeType":"121","messageId":"122","endLine":16,"endColumn":98},"no-native-reassign",["148"],"no-negated-in-lhs",["149"],"no-unused-vars","'appIsOn' is assigned a value but never used.","Identifier","unusedVar","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'teamOneGk' is assigned a value but never used.","'teamOneDef' is assigned a value but never used.","'teamOneMid' is assigned a value but never used.","'teamOneAtt' is assigned a value but never used.","'teamTwoGk' is assigned a value but never used.","'teamTwoDef' is assigned a value but never used.","'teamTwoMid' is assigned a value but never used.","'teamTwoAtt' is assigned a value but never used.","'ToggleButtonGroup' is defined but never used.","'ToggleButton' is defined but never used.","'value' is assigned a value but never used.","'img' is assigned a value but never used.","'alt' is assigned a value but never used.","'handlePosition' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]